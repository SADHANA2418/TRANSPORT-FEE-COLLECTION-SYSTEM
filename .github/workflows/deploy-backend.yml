name: CI/CD Backend Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Azure Login using Service Principal
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 4: Explicit Azure CLI login to ACR (for extra safety)
    - name: Azure CLI login to ACR
      run: |
        echo "🔐 Logging in to ACR via Azure CLI..."
        az acr login --name transport1east

    # Step 5: Docker login using ACR credentials (double sure)
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Step 6: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        IMAGE="${{ secrets.REGISTRY_LOGIN_SERVER }}/mybackend"
        TAG=$(date +%Y%m%d%H%M%S)
        echo "🛠️ Building image with tag: $TAG"
        echo "Full image path: $IMAGE:$TAG"

        docker buildx build \
          --push \
          -t "$IMAGE:latest" \
          -t "$IMAGE:$TAG" \
          ./services/backend

        echo "TAG=$TAG" >> $GITHUB_ENV

    # Step 7: Deploy to Azure Container App
    - name: Deploy to Azure Container App
      run: |
        IMAGE="${{ secrets.REGISTRY_LOGIN_SERVER }}/mybackend:${{ env.TAG }}"
        echo "🚀 Deploying image $IMAGE"
        az containerapp update \
          --name backend-app \
          --resource-group project-one \
          --image "$IMAGE"

    # Step 8: Setup Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '1.5.7'

    # Step 9: Terraform Init
    - name: Terraform Init
      run: terraform init
      working-directory: ./services/terraform

    # Step 10: Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve -var "storage_connection_string=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"
      working-directory: ./services/terraform
